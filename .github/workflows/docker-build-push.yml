name: Build and push docker image
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: bookheaven/bookheaven-server

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for accurate versioning
      
    - name: Setup node js
      uses: actions/setup-node@v3
      with:
        node-version: latest
        cache: 'npm'

    - name: Move Server to BookHeaven directory
      run: |
        mkdir -p BookHeaven/BookHeaven.Server
        shopt -s extglob
        mv !(BookHeaven) BookHeaven/BookHeaven.Server/

    - name: Clone EpubManager
      run: |
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/BookHeaven/BookHeaven.EpubManager.git temp/BookHeaven.EpubManager
        mkdir -p BookHeaven/BookHeaven.EpubManager
        mv temp/BookHeaven.EpubManager/* BookHeaven/BookHeaven.EpubManager/
        
    - name: Clone BookHeaven.Domain
      run: |
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/BookHeaven/BookHeaven.Domain.git temp/BookHeaven.Domain
        mkdir -p BookHeaven/BookHeaven.Domain
        mv temp/BookHeaven.Domain/* BookHeaven/BookHeaven.Domain/
        
    - name: Install npm packages
      working-directory: ./BookHeaven/BookHeaven.Server
      run: npm ci

    - name: Build tailwindcss
      working-directory: ./BookHeaven/BookHeaven.Server
      run: npm run tailwindcss:build
      
    - name: Install Nerdbank.GitVersioning
      run: dotnet tool install --global nbgv

    - name: Get version
      id: get-version
      working-directory: ./BookHeaven/BookHeaven.Server
      run: |
        VERSION=$(nbgv get-version | grep NuGetPackageVersion | cut -d ':' -f2 | xargs)
        echo "Version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build ./BookHeaven \
        --build-arg GOOGLE_BOOKS_API_KEY=${{ secrets.GOOGLE_BOOKS_API_KEY }} \
        --file BookHeaven/BookHeaven.Server/Dockerfile \
        --tag ${{env.REGISTRY}}/${{ env.IMAGE_NAME }}:latest \
        --tag ${{env.REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin

    - name: Push Docker image
      run: docker push ${{env.REGISTRY}}/${{ env.IMAGE_NAME }} --all-tags
