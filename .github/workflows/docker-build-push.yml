name: Build and push docker image
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/bookheaven-server:latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Move Server to BookHeaven directory
      run: |
        mkdir -p BookHeaven/BookHeaven.Server
        shopt -s extglob
        mv !(BookHeaven) BookHeaven/BookHeaven.Server/

    - name: Clone EpubManager
      run: |
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/HeasHeartfire/EpubManager.git temp/EpubManager
        mkdir -p BookHeaven/EpubManager
        mv temp/EpubManager/* BookHeaven/EpubManager/
        
    - name: Clone BookHeaven.Domain
      run: |
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/HeasHeartfire/BookHeaven.Domain.git temp/BookHeaven.Domain
        mkdir -p BookHeaven/BookHeaven.Domain
        mv temp/BookHeaven.Domain/* BookHeaven/BookHeaven.Domain/

    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    - name: Install dependencies
      run: dotnet restore BookHeaven/BookHeaven.Server/BookHeaven.Server.csproj

    - name: Build solution
      run: dotnet build BookHeaven/BookHeaven.Server/BookHeaven.Server.csproj --configuration Release

    - name: Build Docker image
      run: docker build . --file BookHeaven/BookHeaven.Server/Dockerfile --tag ${{ env.IMAGE_NAME }}

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push ${{ env.IMAGE_NAME }}
