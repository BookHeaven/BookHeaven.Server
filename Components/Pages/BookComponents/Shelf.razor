@using BookHeaven.Server.Features.Books
@attribute [Route(Urls.Shelf)]

@implements IDisposable

<PageTitle>@Translations.SHELF</PageTitle>

<ScrollToTop />

<BookGrid Books="Books" Center="true" />

@code {
	[Inject] private NavigationManager NavigationManager { get; set; } = null!;
	[Inject] private ISender Sender { get; set; } = null!;
	[Inject] private IJSRuntime JsRuntime { get; set; } = null!;
	private bool IsLoading { get; set; } = true;
	private List<Book> Books { get; set; } = [];

	protected override async Task OnInitializedAsync()
	{
		var getBooks = await Sender.Send(new GetAllBooksQuery());
		Books = getBooks.Value.OrderBy(b => b.Author?.Name).ThenBy(b => b.Series?.Name).ThenBy(b => b.SeriesIndex).ToList();
		IsLoading = false;
	}

	public void Dispose()
	{
		JsRuntime.InvokeVoidAsync("saveScrollPosition", Urls.Shelf);
	}

}
